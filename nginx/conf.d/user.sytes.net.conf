server {
    listen 80;
    listen [::]:80;
    # Прописать нужное доменное имя.
    server_name _;

    server_tokens off;

    access_log  /dev/stdout;
    error_log   /dev/stderr;

    # Перенаправление HTTP на HTTPS
    location / {
        # Проксирование для варианта без tls.
        proxy_pass http://app:8080;
        # После настройки tls включить редирект.
        #return 301 https://$host$request_uri;
    }

    # Настройки для проверки сертификата Let's Encrypt
    location /.well-known/acme-challenge/ {
        root /var/www/certbot/;
    }
}

server {
    #    
    # TLS настройки. Раскомментировать после выдачи сертификата.
    #
    #listen 443 ssl http2;
    #listen [::]:443 ssl http2;

    listen 443;
    listen [::]:443;
    server_name _;
    server_tokens off;
    
    #ssl_certificate /etc/letsencrypt/live/user.sytes.net/fullchain.pem;
    #ssl_certificate_key /etc/letsencrypt/live/user.sytes.net/privkey.pem;
    #ssl_trusted_certificate /etc/letsencrypt/live/user.sytes.net/chain.pem;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 1d;
    ssl_session_tickets off;

    access_log  /dev/stdout;
    error_log   /dev/stderr;

    client_max_body_size 7M;

    # CORS headers if neded
    #add_header 'Access-Control-Allow-Origin' '*' always;
    #add_header 'Access-Control-Allow-Methods' '*' always;
    #add_header 'Access-Control-Allow-Headers' '*' always;
    #if ($request_method = 'OPTIONS') {
    #    return 204;
    #}

    location / {
        proxy_pass http://app:8080;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Для Let's Encrypt
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }
}
